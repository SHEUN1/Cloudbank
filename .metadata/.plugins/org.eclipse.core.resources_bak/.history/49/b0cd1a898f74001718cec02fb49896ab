/*
 * SeperateObjects.cpp
 *
 *  Created on: 9 Jul 2017
 *      Author: sheun
 */

#include "SeperateObjects.h"
//#include <vector>
//#include <stdlib.h>

//using namespace std;
//RNG rng(12345);
SeperateObjects::SeperateObjects() {

	std::cout<<"identyfying objects in seperate objects class"<<endl;

}

SeperateObjects::~SeperateObjects() {

}



vector <Mat1b>  SeperateObjects::BoundBox(Mat1b Binary, Mat1b origanal_image,Mat1b Original_image_clone, int world_number)
{
	//bounded box will be draw on this copy of the origanal imag instead
	vector<vector<Point> > contours;
	vector<Vec4i> hierarchy;

	//find contours
	findContours(Binary, contours, hierarchy, CV_RETR_TREE, CV_CHAIN_APPROX_SIMPLE, Point(0,0));

	 /// Get the moments(weighted average of image pixels intensities )
	  vector<Moments> mu(contours.size());
	  for( size_t i = 0; i < contours.size(); i++ )
	     { mu[i] = moments( contours[i], false ); }

	  ///  Get the mass centres:
	    vector<Point2f> mc( contours.size() );
	    for( size_t i = 0; i < contours.size(); i++ )
	       { mc[i] = Point2f( mu[i].m10/mu[i].m00 , mu[i].m01/mu[i].m00 ); }

	//Approximate contours to polygons + get bounding rects
	vector<vector<Point> > contours_poly(contours.size());
	vector<Rect> boundRect(contours.size());
	//region of interest
	vector<Mat1b> roi(contours.size());
	//get image coordinate;
	vector<int>x_coordinate( contours.size() );
	vector<int>y_coordinate( contours.size() );

	//character length for roi filename to be saved in separate folder
	char file [50];

	for(size_t i = 0; i < contours.size(); i++)
	{
		approxPolyDP(Mat(contours[i]), contours_poly[i], 3, true);
		boundRect[i] = boundingRect(Mat(contours_poly[i]));
		x_coordinate[i] = ((boundRect[i].x + boundRect[i].width) / 2);
		y_coordinate[i] = ((boundRect[i].y + boundRect[i].height) / 2);
		Scalar color( rand()&255, rand()&255, rand()&255 );
		rectangle (Original_image_clone, boundRect[i].tl(), boundRect[i].br(), color, 2,8,0);
		// Crop the original image to the defined ROI
	    roi[i] = origanal_image(boundRect[i]);
	    //save regions of interest into a folder
	    if (world_number == 0)
	    {
	    	sprintf(file,"../../trasistor_vision_darkworld_images/Image%d.jpg",i);
	    }
	    else if(world_number == 1)
	    {
	    	sprintf(file,"../../trasistor_vision_lightworld_images/Image%d.jpg",i);
	    }
	    imwrite(file,roi[i]);

	}

	return roi;
}

