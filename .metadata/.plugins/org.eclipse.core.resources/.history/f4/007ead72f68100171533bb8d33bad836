/*
 * SendDataToPython.cpp
 *
 *  Created on: 14 Aug 2017
 *      Author: sheun
 */

#include "SendDataToPython.h"

SendDataToPython::SendDataToPython() {
	// TODO Auto-generated constructor stub

}

SendDataToPython::~SendDataToPython() {
	// TODO Auto-generated destructor stub
}


boost::python::dict SendDataToPython::featurePointToDict(vector< vector<KeyPoint> > vectorToSend, vector<int>x_coordinate,vector<int>y_coordinate)
{
	//iterator for each objects
	typename vector< vector<KeyPoint> >::iterator iterEachObject;
	//iterator for each keypoint for each object
	typename vector<KeyPoint>::iterator iterKeyPoints;
	cout<<vectorToSend.size()<<endl;


	//map/dictionary will hold the keypoints acciociated with each object
	boost::python::dict keypointMap;
	int i = 0;

	boost::python::list CollectionOfKeypointArrayForEachObject2;
	for (iterEachObject = vectorToSend.begin(); iterEachObject != vectorToSend.end(); ++iterEachObject)
	{
		//feature array
		boost::python::list keyPointList;
		// hold a collection of all keypoints belonging to the object
		boost::python::list CollectionOfKeypointArrayForEachObject;
		CollectionOfKeypointArrayForEachObject.append(x_coordinate[i]);
		CollectionOfKeypointArrayForEachObject.append(y_coordinate[i]);
		//create a list of individual keypoints

		for(iterKeyPoints = iterEachObject->begin(); iterKeyPoints != iterEachObject->end(); ++iterKeyPoints)
		{
			boost::python::list individualKeypointArray;// 1 keypoint

			individualKeypointArray.append(iterKeyPoints->pt.x);
			individualKeypointArray.append(iterKeyPoints->pt.y);
			individualKeypointArray.append(iterKeyPoints->size);
			individualKeypointArray.append(iterKeyPoints->angle);
			individualKeypointArray.append(iterKeyPoints->response);
			individualKeypointArray.append(iterKeyPoints->octave);
			keyPointList.append(individualKeypointArray); // end of first object should be 400 keypoints

		}
		cout<<"keypoints"<<boost::python::len(keyPointList)<<endl;

		cout<<"CollectionOfKeypointArrayForEachObject"<<CollectionOfKeypointArrayForEachObject.append(keyPointList)<<endl;

		//CollectionOfKeypointArrayForEachObject2.append(CollectionOfKeypointArrayForEachObject);
		keypointMap[i] = keyPointList;
		i++;
		cout<<i<<endl;
	}

	return keypointMap;
}
